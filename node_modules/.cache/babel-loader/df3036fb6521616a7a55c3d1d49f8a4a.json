{"ast":null,"code":"import _slicedToArray from \"/home/marta/Documents/typing-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/marta/Documents/typing-game/src/components/game.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction Game() {\n  const STARTING_TIME = 5;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState(STARTING_TIME),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeReamining = _useState4[0],\n        setTimeRemaining = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isTimeRunning = _useState6[0],\n        setIsTimeRunning = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        wordNum = _useState8[0],\n        setWordNum = _useState8[1];\n\n  const textBoxRef = useRef(null);\n\n  function handleChange(e) {\n    e.preventDefault();\n    const value = e.target.value;\n    setText(value);\n  }\n\n  function wordCount(text) {\n    let words = text.trim().split(' ');\n    return words.filter(word => word !== '').length;\n  }\n\n  function startClock() {\n    setIsTimeRunning(true);\n    setTimeRemaining(STARTING_TIME);\n    setText('');\n    textBoxRef.current.disabled = false;\n    textBoxRef.current.focus();\n  }\n\n  function endGame() {\n    setIsTimeRunning(false);\n    setWordNum(wordCount(text));\n  }\n\n  useEffect(() => {\n    if (isTimeRunning && timeReamining > 0) {\n      setTimeout(() => {\n        setTimeRemaining(time => time - 1);\n      }, 1000);\n    } else if (timeReamining === 0) {\n      endGame();\n    }\n  }, [timeReamining, isTimeRunning]);\n  console.log(isTimeRunning);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"How fast can you type?\"), React.createElement(\"textarea\", {\n    value: text,\n    onChange: handleChange,\n    disabled: !isTimeRunning,\n    ref: textBoxRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Time remaining: \", timeReamining), React.createElement(\"button\", {\n    onClick: startClock,\n    disabled: isTimeRunning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Start\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Word count: \", wordNum, \" \"));\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/marta/Documents/typing-game/src/components/game.js"],"names":["React","useState","useEffect","useRef","Game","STARTING_TIME","text","setText","timeReamining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordNum","setWordNum","textBoxRef","handleChange","e","preventDefault","value","target","wordCount","words","trim","split","filter","word","length","startClock","current","disabled","focus","endGame","setTimeout","time","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;AAGA,SAASC,IAAT,GAAgB;AACZ,QAAMC,aAAa,GAAG,CAAtB;;AADY,oBAEYJ,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,QAELK,IAFK;AAAA,QAECC,OAFD;;AAAA,qBAG8BN,QAAQ,CAACI,aAAD,CAHtC;AAAA;AAAA,QAGLG,aAHK;AAAA,QAGUC,gBAHV;;AAAA,qBAI8BR,QAAQ,CAAC,KAAD,CAJtC;AAAA;AAAA,QAILS,aAJK;AAAA,QAIUC,gBAJV;;AAAA,qBAKkBV,QAAQ,CAAC,CAAD,CAL1B;AAAA;AAAA,QAKLW,OALK;AAAA,QAKIC,UALJ;;AAMZ,QAAMC,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;;AAEA,WAASY,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AADqB,UAEdC,KAFc,GAELF,CAAC,CAACG,MAFG,CAEdD,KAFc;AAGrBX,IAAAA,OAAO,CAACW,KAAD,CAAP;AACH;;AAED,WAASE,SAAT,CAAmBd,IAAnB,EAAyB;AACrB,QAAIe,KAAK,GAAGf,IAAI,CAACgB,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAAZ;AACA,WAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAK,EAA9B,EAAkCC,MAAzC;AAEH;;AAED,WAASC,UAAT,GAAsB;AAClBhB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,IAAAA,gBAAgB,CAACJ,aAAD,CAAhB;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAO,IAAAA,UAAU,CAACc,OAAX,CAAmBC,QAAnB,GAA8B,KAA9B;AACAf,IAAAA,UAAU,CAACc,OAAX,CAAmBE,KAAnB;AACH;;AAED,WAASC,OAAT,GAAmB;AACfpB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,UAAU,CAACO,SAAS,CAACd,IAAD,CAAV,CAAV;AACH;;AAGDJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,aAAa,IAAIF,aAAa,GAAG,CAApC,EACA;AAACwB,MAAAA,UAAU,CAAC,MAAM;AACfvB,QAAAA,gBAAgB,CAACwB,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAhB;AACF,OAFU,EAER,IAFQ,CAAV;AAEQ,KAHT,MAGc,IAAGzB,aAAa,KAAK,CAArB,EAAuB;AACjCuB,MAAAA,OAAO;AACV;AACJ,GAPQ,EAON,CAACvB,aAAD,EAAgBE,aAAhB,CAPM,CAAT;AASAwB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,aAAZ;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AACI,IAAA,KAAK,EAAEJ,IADX;AAEI,IAAA,QAAQ,EAAES,YAFd;AAGI,IAAA,QAAQ,EAAE,CAACL,aAHf;AAII,IAAA,GAAG,EAAEI,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBN,aAArB,CARJ,EASI;AACA,IAAA,OAAO,EAAEmB,UADT;AAEA,IAAA,QAAQ,EAAEjB,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBE,OAAjB,MAbJ,CADJ;AAkBH;;AAED,eAAeR,IAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\n\nfunction Game() {\n    const STARTING_TIME = 5\n    const [text, setText] = useState('')\n    const [timeReamining, setTimeRemaining] = useState(STARTING_TIME)\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\n    const [wordNum, setWordNum] = useState(0)\n    const textBoxRef = useRef(null)\n\n    function handleChange(e) {\n        e.preventDefault()\n        const {value} = e.target\n        setText(value)\n    }\n    \n    function wordCount(text) {\n        let words = text.trim().split(' ')\n        return words.filter(word => word !== '').length\n  \n    }\n\n    function startClock() {\n        setIsTimeRunning(true)\n        setTimeRemaining(STARTING_TIME)\n        setText('')\n        textBoxRef.current.disabled = false\n        textBoxRef.current.focus()\n    }\n\n    function endGame() {\n        setIsTimeRunning(false)\n        setWordNum(wordCount(text))\n    }\n    \n\n    useEffect(() => {\n        if(isTimeRunning && timeReamining > 0)\n        {setTimeout(() => {\n           setTimeRemaining(time => time - 1)\n        }, 1000)}else if(timeReamining === 0){\n            endGame()\n        }\n    }, [timeReamining, isTimeRunning])\n\n    console.log(isTimeRunning)\n    \n\n    return(\n        <div>\n            <h1>How fast can you type?</h1>\n            <textarea\n                value={text}\n                onChange={handleChange}\n                disabled={!isTimeRunning}\n                ref={textBoxRef}\n            />\n            <h4>Time remaining: {timeReamining}</h4>\n            <button \n            onClick={startClock}\n            disabled={isTimeRunning}\n            >Start</button>\n            <h1>Word count: {wordNum} </h1>\n            \n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}